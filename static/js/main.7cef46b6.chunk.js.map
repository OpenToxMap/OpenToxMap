{"version":3,"sources":["logo.svg","pages/HomePage.js","components/FeatureDetails.js","pages/MapPage.js","pages/DataPage.js","pages/ServiceStatusPage.js","components/Nav.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HomePage","role","class","FeatureDetails","properties","feature","className","PRIMARY_NAME","CITY_NAME","COUNTY_NAME","STATE_CODE","POSTAL_CODE","target","href","FAC_URL","ACTIVE_STATUS","MapPage","useState","selectedFeature","setSelectedFeature","map","useRef","triUrl","triLayer","featureLayer","url","useEffect","geosearch","position","useMapBounds","expanded","addTo","current","leafletElement","on","evt","query","nearby","latlng","run","error","featureCollection","response","console","log","features","length","Map","style","width","height","center","zoom","ref","TileLayer","attribution","DataPage","ServiceStatusPage","Nav","to","Footer","App","basename","process","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7cef46b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\n\nexport default function HomePage() {\n  return (\n    <main role=\"main\">\n      <div class=\"jumbotron bg-cover jumbo-image\">\n        <div class=\"container\">\n          <h1 class=\"display-3\">Open TOXMAP</h1>\n          <p>\n            Now that we know who you are, I know who I am. I'm not a mistake! It\n            all makes sense! In a comic, you know how you can tell who the\n            arch-villain's going to be? He's the exact opposite of the hero. And\n            most times they're friends, like you and me! I should've known way\n            back when... You know why, David? Because of the kids. They called\n            me Mr Glass.{' '}\n          </p>\n        </div>\n      </div>\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <h3>What was TOXMAP?</h3>\n            <p>\n              Do you see any Teletubbies in here? Do you see a slender plastic\n              tag clipped to my shirt with my name printed on it? Do you see a\n              little Asian child with a blank expression on his face sitting\n              outside on a mechanical helicopter that shakes when you put\n              quarters in it? No? Well, that's what you see at a toy store. And\n              you must think you're in a toy store, because you're here shopping\n              for an infant named Jeb.{' '}\n            </p>\n          </div>\n          <div class=\"col-md-4\">\n            <h3>Why Open TOXMAP?</h3>\n            <p>\n              Well, the way they make shows is, they make one show. That show's\n              called a pilot. Then they show that show to the people who make\n              shows, and on the strength of that one show they decide if they're\n              going to make more shows. Some pilots get picked and become\n              television programs. Some don't, become nothing. She starred in\n              one of the ones that became nothing.{' '}\n            </p>\n          </div>\n          <div class=\"col-md-4\">\n            <h3>How Can I Contribute?</h3>\n            <p>\n              Look, just because I don't be givin' no man a foot massage don't\n              make it right for Marsellus to throw Antwone into a glass\n              motherfuckin' house, fuckin' up the way the nigger talks.\n              Motherfucker do that shit to me, he better paralyze my ass, 'cause\n              I'll kill the motherfucker, know what I'm sayin'?{' '}\n            </p>\n          </div>\n        </div>\n\n        <hr />\n      </div>\n    </main>\n  );\n}\n","import React from 'react';\n\nexport default function FeatureDetails({feature}) {\n  const {properties} = feature;\n  return (\n    <div className=\"feature-details\">\n      <h2>Name</h2>\n      <p>{properties.PRIMARY_NAME}</p>\n      <h2>Address</h2>\n      <p>{properties.CITY_NAME}</p>\n      <p>{properties.COUNTY_NAME}</p>\n      <p>{properties.STATE_CODE}</p>\n      <p>{properties.POSTAL_CODE}</p>\n      <h2>FAC</h2>\n      <p>\n        <a target=\"_blank\" href={properties.FAC_URL}>\n          {properties.FAC_URL}\n        </a>\n      </p>\n      <h2>Status</h2>\n      <p>{properties.ACTIVE_STATUS}</p>\n    </div>\n  );\n}\n","import React, {useEffect, useState, useRef} from 'react';\nimport {featureLayer, query} from 'esri-leaflet';\nimport {geosearch} from 'esri-leaflet-geocoder';\nimport FeatureDetails from '../components/FeatureDetails';\nimport {\n  Map,\n  Marker,\n  Popup,\n  TileLayer,\n  GeoJSON,\n  WMSTileLayer,\n} from 'react-leaflet';\n\nexport default function MapPage() {\n  const position = [41.850033, -100.6500523];\n  const [data, setData] = useState(null);\n  const [selectedFeature, setSelectedFeature] = useState(null);\n\n  const map = useRef();\n  const triUrl =\n    'https://geodata.epa.gov/arcgis/rest/services/OEI/FRS_INTERESTS/MapServer/23';\n  const triLayer = featureLayer({\n    url: triUrl,\n  });\n\n  useEffect(() => {\n    if (map) {\n      geosearch({\n        position: 'topright',\n        useMapBounds: false,\n        expanded: true,\n      }).addTo(map.current.leafletElement);\n      triLayer.addTo(map.current.leafletElement);\n      //Click Identify Logic for TRI features\n\n      map.current.leafletElement.on('click', evt => {\n        var qry = query({\n          url: triUrl,\n        })\n          .nearby(evt.latlng, 10000)\n          .run((error, featureCollection, response) => {\n            if (error) {\n              console.log(error);\n              return;\n            }\n            console.log(featureCollection.features);\n            if (featureCollection.features.length > 0) {\n              setSelectedFeature(featureCollection.features[0]);\n            }\n          });\n      });\n    }\n  }, [map]);\n\n  return (\n    <div className=\"map-page\">\n      <Map\n        style={{width: '100%', height: '100%'}}\n        center={position}\n        zoom={8}\n        ref={map}>\n        <TileLayer\n          url=\"https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n      </Map>\n      {selectedFeature && <FeatureDetails feature={selectedFeature} />}\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function DataPage() {\n  return <h1>DataPage</h1>;\n}\n","import React from 'react';\n\nexport default function ServiceStatusPage() {\n  return <h1>Service Status</h1>;\n}\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nexport default function Nav() {\n  return (\n    <nav className=\"nav\">\n      <Link className=\"home-link\" to=\"/\">\n        Open TOXMAP\n      </Link>\n\n      <ul className=\"links\">\n        <li>\n          <Link to=\"/map\" className=\"nav-link\">\n            Map\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/data\" className=\"nav-link\">\n            Data Sources\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/service-status\" className=\"nav-link\">\n            Service Status\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n","import React from 'react';\n\nexport default function Footer() {\n  return (\n    <footer class=\"footer\">\n      <p>Lets add some contact info here...</p>\n    </footer>\n  );\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport HomePage from './pages/HomePage';\nimport MapPage from './pages/MapPage';\nimport DataPage from './pages/DataPage';\nimport ServiceStatusPage from './pages/ServiceStatusPage';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Nav from './components/Nav';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <Nav />\n        <div className=\"content\">\n          <Route path=\"/\" exact={true} component={HomePage} />\n          <Route path=\"/map\" exact={true} component={MapPage} />\n          <Route path=\"/data\" exact={true} component={DataPage} />\n          <Route\n            path=\"/service-status\"\n            exact={true}\n            component={ServiceStatusPage}\n          />\n        </div>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}